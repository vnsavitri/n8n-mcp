name: Automated Release
on:
  push:
    branches: [main]
    paths:
      - 'package.json'
      - 'package.runtime.json'
permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write
# Prevent concurrent releases
concurrency:
  group: release
  cancel-in-progress: false
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  detect-version-change:
    name: Detect Version Change
    runs-on: ubuntu-latest
    outputs:
      version-changed: ${{ steps.check.outputs.changed }}
      new-version: ${{ steps.check.outputs.version }}
      previous-version: ${{ steps.check.outputs.previous-version }}
      is-prerelease: ${{ steps.check.outputs.is-prerelease }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - name: Check for version change
        id: check
        run: |
          # Get current version from package.json
          CURRENT_VERSION=$(node -e "console.log(require('./package.json').version)")
          
          # Get previous version from git history safely
          PREVIOUS_VERSION=$(git show HEAD~1:package.json 2>/dev/null | node -e "
            try {
              const data = require('fs').readFileSync(0, 'utf8');
              const pkg = JSON.parse(data);
              console.log(pkg.version || '0.0.0');
            } catch (e) {
              console.log('0.0.0');
            }
          " || echo "0.0.0")
          
          echo "Previous version: $PREVIOUS_VERSION"
          echo "Current version: $CURRENT_VERSION"
          
          # Check if version changed
          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            echo "previous-version=$PREVIOUS_VERSION" >> $GITHUB_OUTPUT
            
            # Check if it's a prerelease (contains alpha, beta, rc, dev)
            if echo "$CURRENT_VERSION" | grep -E "(alpha|beta|rc|dev)" > /dev/null; then
              echo "is-prerelease=true" >> $GITHUB_OUTPUT
